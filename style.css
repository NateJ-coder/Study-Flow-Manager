/* ===== A) CSS Reset & Fullscreen Layout ===== */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body {
  height: 100%;
  width: 100%;
  min-height: 100vh;
  font-family: sans-serif;
  background: #000; /* fallback background */
  /* Allow natural scrolling on laptop/desktop displays */
  overflow: auto;
}

/* ===== B) Background Layers ===== */
#bg-root {
  position: fixed;
  inset: 0;
  overflow: hidden;
  z-index: 0; /* Behind app content but visible */
}

#bg-slideshow {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
  z-index: 1;
}

#particles-layer {
  position: absolute;
  inset: 0;
  pointer-events: none; /* purely decorative */
  z-index: 2;
}

/* ===== C) Navigation Buttons ===== */
.nav-item,
.nav-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  /* laptop-friendly size */
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.25);
  cursor: pointer;
  transition: background 0.2s ease, transform 0.2s ease;
}

/* Nav SVG icon styling */
.nav-icon-img {
  /* slightly smaller inside the nav circle for balance on laptop screens */
  width: 28px;
  height: 28px;
  display: block;
  transition: transform 220ms cubic-bezier(.2,.9,.3,1), filter 220ms linear, opacity 180ms ease;
  will-change: transform;
}

.nav-item:hover .nav-icon-img,
.nav-item:focus .nav-icon-img {
  transform: scale(1.08) translateY(-2px);
  opacity: 1;
}

/* brief pop animation when exiting screensaver */
.nav-icon-img.pop {
  transform: scale(1.22) translateY(-4px);
  transition: transform 260ms cubic-bezier(.2,.9,.3,1);
}

/* Theme tinting for icons â€” use CSS variables set by JS */
.nav-icon-img {
  /* base shadow + optional colored glow using theme tint variable */
  filter: drop-shadow(0 2px 2px rgba(0,0,0,0.12)) drop-shadow(0 0 6px var(--nav-icon-tint, transparent));
}

/* Clock icon micro-rotation for seconds tick */
.nav-icon-rotate { transform-origin: 50% 50%; transition: transform 220ms ease; }


.nav-item:hover,
.nav-icon:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.05);
}

.nav-item:active,
.nav-icon:active {
  transform: scale(0.95);
}

/* ===== D) Page Visibility States ===== */
.app-page {
  width: 100%;
  /* allow pages to size naturally; ensure at least full viewport height */
  min-height: 100vh;
  display: block;
  background: transparent; /* Allow background to show through */
  position: relative;
  z-index: 10; /* Above background layers */
}

.app-page.hidden {
  display: none !important;
}

/* Main app sections */
#app {
  position: relative;
  width: 100%;
  /* use min-height so the app can fit naturally on laptop displays and smaller screens */
  min-height: 640px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent; /* Allow background to show through */
  z-index: 10; /* Above background layers */
}

#app section {
  width: 100%;
  /* slightly narrower max-width for better readability on laptops */
  max-width: 720px;
  padding: 20px;
  text-align: center;
  background: transparent; /* Allow background to show through */
  position: relative;
  z-index: 10; /* Above background layers */
}

#app section[hidden] {
  display: none;
}

.page-title h1 {
  /* responsive title sizing for a range of laptop screens */
  font-size: clamp(24px, 3.5vw, 48px);
  font-weight: bold;
  color: var(--timer-text-color, #ffffff);
  margin-bottom: 30px;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
}

/* ===== E) Hourglass Animation ===== */
#hourglass-container {
  position: relative;
  /* responsive hourglass sizing suitable for laptop displays */
  width: clamp(56px, 6vw, 80px);
  height: clamp(80px, 9vw, 120px);
  margin: 0 auto;
}

.hourglass {
  position: relative;
  width: 60px;
  height: 100px;
  border: 3px solid var(--ui-tint-primary, #dff6ff);
  border-radius: 8px;
  background: transparent;
  transform-origin: center;
  transition: transform 0.8s ease-in-out;
}

/* Hourglass flip animation */
.hourglass.flip {
  transform: rotateZ(180deg);
}

/* Sand containers */
.hourglass::before,
.hourglass::after {
  content: '';
  position: absolute;
  width: 100%;
  background: var(--sand-color, #f7f7f7);
  transition: height 0.3s ease;
}

/* Top sand */
.hourglass::before {
  top: 3px;
  left: 0;
  height: var(--top-sand-height, 40%);
  border-radius: 4px 4px 50% 50%;
}

/* Bottom sand */
.hourglass::after {
  bottom: 3px;
  left: 0;
  height: var(--bottom-sand-height, 10%);
  border-radius: 50% 50% 4px 4px;
}

/* Sand stream effect */
.sand-stream {
  position: absolute;
  top: 48%;
  left: 50%;
  width: 2px;
  height: 20px;
  background: var(--sand-color, #f7f7f7);
  transform: translateX(-50%);
  opacity: 0;
  animation: sandPour 2s linear infinite;
}

@keyframes sandPour {
  0% {
    opacity: 0;
    height: 0;
  }
  50% {
    opacity: 1;
    height: 20px;
  }
  100% {
    opacity: 0;
    height: 0;
  }
}

/* ===== F) Screensaver Styles ===== */
.screensaver-active {
  cursor: none;
}

.screensaver-active #countdown {
  transform: scale(0.6);
  opacity: 0.7;
  transition: transform 1s ease, opacity 1s ease;
}

.screensaver-active #hourglass {
  transform: scale(0.8);
  opacity: 0.8;
  transition: transform 1s ease, opacity 1s ease;
}

.screensaver-active .nav-item,
.screensaver-active .nav-icon {
  opacity: 0.4;
  transition: opacity 1s ease;
}

/* Pulse animation for screensaver mode */
.screensaver-active .hourglass {
  animation: hourglassPulse 3s ease-in-out infinite;
}

@keyframes hourglassPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
}

/* ===== G) Rain Wet Effect ===== */
.rain-wet-effect {
  position: relative;
  overflow: hidden;
}

.rain-wet-effect::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('assets/images/rain-drops-overlay.png') repeat;
  background-size: 40px 40px;
  opacity: 0;
  animation: rainDrops 0.5s ease-in-out forwards;
  pointer-events: none;
  border-radius: inherit;
}

@keyframes rainDrops {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  50% {
    opacity: 0.9;
  }
  100% {
    opacity: 0.7;
    transform: scale(1);
  }
}

/* Enhanced wet effect for buttons */
.rain-wet-effect:hover::after {
  animation: rainDropsHover 0.3s ease-in-out forwards;
}

@keyframes rainDropsHover {
  0% {
    opacity: 0.7;
  }
  50% {
    opacity: 0.9;
  }
  100% {
    opacity: 1;
  }
}

/* Glass reflection effect during rain */
.rain-wet-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 50%,
    transparent 100%
  );
  transform: skewX(-15deg);
  animation: glassReflection 3s ease-in-out infinite;
  pointer-events: none;
  border-radius: inherit;
}

@keyframes glassReflection {
  0% {
    left: -100%;
  }
  50% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* ===== G2) Rain Particle System ===== */
.rain-particle {
  position: fixed;
  width: 2px;
  height: 15px;
  background: linear-gradient(180deg, rgba(173, 216, 230, 0.8) 0%, rgba(135, 206, 235, 0.6) 50%, transparent 100%);
  pointer-events: none;
  z-index: 5;
  opacity: 0.7;
  animation: rainFall linear infinite;
}

.rain-particle.heavy {
  width: 3px;
  height: 20px;
  opacity: 0.9;
}

.rain-particle.light {
  width: 1px;
  height: 10px;
  opacity: 0.5;
}

@keyframes rainFall {
  0% {
    transform: translateY(-100px);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  90% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(100vh);
    opacity: 0;
  }
}

/* Rain splash effect when particles hit bottom */
.rain-splash {
  position: fixed;
  width: 8px;
  height: 2px;
  background: rgba(173, 216, 230, 0.6);
  border-radius: 50%;
  pointer-events: none;
  z-index: 4;
  animation: rainSplash 0.3s ease-out forwards;
}

@keyframes rainSplash {
  0% {
    transform: scale(0.5);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.5);
    opacity: 0.6;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

/* Rain overlay for entire screen */
.rain-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 3;
  background: url('assets/images/rain-drops-overlay.png') repeat;
  background-size: 100px 100px;
  opacity: 0;
  animation: rainOverlayFade 1s ease-in-out forwards;
}

@keyframes rainOverlayFade {
  0% {
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 0.3;
    transform: translateY(0);
  }
}

/* ===== SEASONAL PARTICLES (LEAVES & SNOW) ===== */
.season-particle {
  position: fixed;
  pointer-events: none;
  z-index: 3;
  opacity: 0.95;
  will-change: transform, opacity, left, top;
}

/* Leaves falling: gentle horizontal sway and rotate while descending */
.season-particle.leaf {
  background-image: radial-gradient(circle at 30% 30%, rgba(255,255,255,0.15), transparent 30%);
  border-radius: 4px;
  transform-origin: center;
  animation-name: leafFall, leafSway;
  animation-timing-function: linear, ease-in-out;
  animation-iteration-count: 1, infinite;
  animation-fill-mode: forwards;
}

.leaf-green { background-color: #6fbf5e; }
.leaf-brown { background-color: #b36a2a; }

@keyframes leafFall {
  0% { transform: translateY(-10vh) rotate(0deg); opacity: 0; }
  10% { opacity: 1; }
  100% { transform: translateY(110vh) rotate(360deg); opacity: 0.9; }
}

@keyframes leafSway {
  0% { transform: translateX(0); }
  50% { transform: translateX(40px); }
  100% { transform: translateX(-30px); }
}

/* Snowflakes: gentle glide with slight horizontal drift */
.season-particle.snowflake {
  background: radial-gradient(circle, #ffffff 0%, #e8f4ff 70%, transparent 100%);
  border-radius: 50%;
  opacity: 0.95;
  animation-name: snowFall, snowDrift;
  animation-timing-function: linear, ease-in-out;
  animation-iteration-count: 1, infinite;
  animation-fill-mode: forwards;
}

@keyframes snowFall {
  0% { transform: translateY(-5vh); opacity: 0.6; }
  50% { opacity: 0.9; }
  100% { transform: translateY(110vh); opacity: 0; }
}

@keyframes snowDrift {
  0% { transform: translateX(0); }
  50% { transform: translateX(30px); }
  100% { transform: translateX(-20px); }
}

/* ===== MOUSE TRAIL PARTICLES ===== */
.trail-particle { position: fixed; pointer-events: none; z-index: 10002; opacity: 0.95; }
.trail-leaf { border-radius: 3px; transform-origin: center; animation: trailFade 0.9s forwards ease-out; }
.trail-snow { border-radius: 50%; animation: trailFade 1.1s forwards ease-out; }
.trail-dot { background: rgba(255,255,255,0.9); border-radius: 50%; animation: trailFade 0.6s forwards ease-out; }
.trail-leaf.leaf-green { background: #7ccf6b; }
.trail-leaf.leaf-brown { background: #c46a2b; }
.trail-snow { background: #ffffff; box-shadow: 0 0 6px rgba(255,255,255,0.6); }

@keyframes trailFade {
  0% { opacity: 1; transform: translateY(0) scale(1); }
  100% { opacity: 0; transform: translateY(-6px) scale(0.6); }
}

/* ===== CUSTOM CURSOR ===== */
/* Hide native cursor when custom cursor is enabled */
.has-custom-cursor * { cursor: none !important; }

#custom-cursor { width: 40px; height: 40px; border-radius: 50%; position: fixed; pointer-events: none; z-index: 10001; transform: translate(-50%,-50%); display: flex; align-items: center; justify-content: center; }

/* Image inside the cursor (default vs click) */
#custom-cursor img { display: block; width: 26px; height: 26px; }

/* Press animation for the click svg - finger moves down slightly */
.cursor-press { transform: translateY(6px) scale(0.98); transition: transform 120ms cubic-bezier(.2,.9,.3,1); }

/* ===== SCREENSAVER (clean UI, background-first) ===== */
/* When screensaver is active, reduce UI chrome but keep background bright */


.screensaver-active #app,
.screensaver-active header#global-topbar,
.screensaver-active #sidebar,
.screensaver-active .page-title,
.screensaver-active #timer-controls,
.screensaver-active .nav-item {
  opacity: 0; /* hide interactive chrome */
  pointer-events: none;
  transform: translateY(6px);
}

.screensaver-active #timer-frame {
  background: transparent;
  border: none;
  box-shadow: none;
  opacity: 0.85;
}

/* Make the countdown smaller and place it low center to mimic the sleep image */
.screensaver-active #countdown {
  font-size: 28px;
  color: rgba(255,255,255,0.95);
  text-shadow: 0 2px 8px rgba(0,0,0,0.25);
  position: absolute;
  left: 50%;
  bottom: 48px;
  transform: translateX(-50%);
}

/* Emphasize background slightly by scaling the slideshow layer */
.screensaver-active #bg-slideshow {
  transform-origin: center;
  transform: scale(1.03);
  transition: transform 900ms ease;
}

/* Increase particle visibility during screensaver */
.screensaver-active #particles-layer { opacity: 1; }

/* Frame SVG wrapper - position and ensure it frames the timer content */
.timer-frame-svg-wrapper {
  position: absolute;
  inset: 0;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9; /* behind the main app content but above bg */
}

.timer-frame-svg { width: 100%; height: 100%; opacity: 0.98; }

/* If the frame contains a cat tail or head parts, animate them subtly */
.timer-frame-svg .cat-tail, .cat-tail { transform-origin: 50% 0%; animation: catTailSwing 1.1s ease-in-out infinite; }
.timer-frame-svg .cat-head, .cat-head { transform-origin: 50% 50%; animation: catHeadLook 3.2s ease-in-out infinite; }

@keyframes catTailSwing {
  0% { transform: rotate(-8deg); }
  50% { transform: rotate(8deg); }
  100% { transform: rotate(-8deg); }
}

@keyframes catHeadLook {
  0% { transform: translateX(0px) rotate(0deg); }
  35% { transform: translateX(4px) rotate(2deg); }
  65% { transform: translateX(-2px) rotate(-1deg); }
  100% { transform: translateX(0px) rotate(0deg); }
}

/* Keep timer content above the frame so countdown and controls remain tappable */
#timer-frame > * { position: relative; z-index: 10; }



/* ===== H) Water Ripple Effect ===== */
.water-ripple {
  position: fixed;
  pointer-events: none;
  z-index: 9999;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(173, 216, 230, 0.6) 0%,
    rgba(135, 206, 235, 0.4) 30%,
    rgba(100, 149, 237, 0.2) 60%,
    transparent 100%
  );
  animation: rippleEffect 0.8s ease-out forwards;
}

@keyframes rippleEffect {
  0% {
    width: 10px;
    height: 10px;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.8;
  }
  100% {
    width: 120px;
    height: 120px;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Multiple ripple sizes for variety */
.water-ripple.large {
  animation: rippleEffectLarge 1s ease-out forwards;
}

@keyframes rippleEffectLarge {
  0% {
    width: 15px;
    height: 15px;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.9;
  }
  100% {
    width: 200px;
    height: 200px;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

.water-ripple.small {
  animation: rippleEffectSmall 0.6s ease-out forwards;
}

@keyframes rippleEffectSmall {
  0% {
    width: 8px;
    height: 8px;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.7;
  }
  100% {
    width: 80px;
    height: 80px;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* ===== I) Shock Animation ===== */
.shock-cursor {
  cursor: not-allowed !important;
}

.shock-cursor * {
  cursor: not-allowed !important;
}

/* Shock flash effect */
.shock-flash {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    45deg,
    transparent 25%,
    rgba(255, 255, 0, 0.3) 25%,
    rgba(255, 255, 0, 0.3) 50%,
    transparent 50%,
    transparent 75%,
    rgba(255, 255, 0, 0.3) 75%
  );
  background-size: 20px 20px;
  pointer-events: none;
  z-index: 10000;
  opacity: 0;
  animation: shockFlash 0.3s ease-in-out;
}

@keyframes shockFlash {
  0% {
    opacity: 0;
    transform: scale(1);
  }
  20% {
    opacity: 0.8;
    transform: scale(1.02);
  }
  40% {
    opacity: 0.4;
    transform: scale(0.98);
  }
   60% {
    opacity: 0.7;
    transform: scale(1.01);
  }
  80% {
    opacity: 0.2;
    transform: scale(0.99);
  }
  100% {
    opacity: 0;
    transform: scale(1);
  }
}

/* Button shock effect */
.button-shock {
  animation: buttonShock 0.4s ease-in-out;
}

@keyframes buttonShock {
  0%, 100% {
    transform: translateX(0);
    filter: brightness(1);
  }
  10% {
    transform: translateX(-2px);
    filter: brightness(1.5) hue-rotate(60deg);
  }
  20% {
    transform: translateX(2px);
    filter: brightness(0.8) hue-rotate(-60deg);
  }
  30% {
    transform: translateX(-1px);
    filter: brightness(1.3) hue-rotate(30deg);
  }
   40% {
    transform: translateX(1px);
    filter: brightness(0.9) hue-rotate(-30deg);
  }
   50% {
    transform: translateX(-0.5px);
    filter: brightness(1.2) hue-rotate(15deg);
  }
   60% {
    transform: translateX(0.5px);
    filter: brightness(0.95) hue-rotate(-15deg);
  }
}

/* Enhanced rain lockout styling */
#rain-lockout {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 30, 60, 0.3);
  backdrop-filter: blur(2px);
  z-index: 8000;
  pointer-events: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Honor the hidden attribute explicitly to avoid accidental display */
#rain-lockout[hidden] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

.lockout-card {
  background: rgba(255, 215, 0, 0.9);
  color: #000;
  padding: 20px 30px;
  border-radius: 12px;
  font-weight: bold;
  font-size: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  animation: rainLockoutPulse 2s ease-in-out infinite;
  text-align: center;
}

.lockout-card h2 {
  margin: 0 0 10px 0;
  font-size: 20px;
}

.lockout-card p {
  margin: 5px 0;
  font-size: 14px;
}

@keyframes rainLockoutPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
}

/* ===== J) Calendar Styles ===== */
#calendar-grid {
  width: 100%;
  max-width: 400px;
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 2px;
  background: rgba(255, 255, 255, 0.1);
  padding: 8px;
  border-radius: 8px;
  backdrop-filter: blur(10px);
}

.calendar-header {
  padding: 8px 4px;
  text-align: center;
  font-weight: bold;
  font-size: 12px;
  color: var(--ui-tint-primary, #dff6ff);
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}

.calendar-day {
  position: relative;
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255, 255, 255, 0.15);
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 14px;
  font-weight: 500;
  color: #ffffff;
  border: 1px solid transparent;
  overflow: hidden;
}

.calendar-day:hover {
  background: rgba(255, 255, 255, 0.25);
  transform: scale(1.05);
  border-color: var(--ui-tint-primary, #dff6ff);
}

.calendar-day.today {
  background: var(--ui-tint-primary, #dff6ff);
  color: #000000;
  font-weight: bold;
  box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.5);
}

.calendar-day.completed {
  background: var(--ui-tint-secondary, #b7f0c6);
  color: #000000;
}

.calendar-day.has-tasks {
  border: 2px solid rgba(255, 215, 0, 0.6);
}

.calendar-day.drawing-animation {
  animation: drawingEffect 0.8s ease-in-out;
}

@keyframes drawingEffect {
  0% {
    transform: scale(1);
    background: rgba(255, 255, 255, 0.15);
  }
  25% {
    transform: scale(1.1);
    background: rgba(255, 215, 0, 0.3);
  }
  50% {
    transform: scale(1.15);
    background: rgba(255, 140, 0, 0.4);
  }
  75% {
    transform: scale(1.1);
    background: var(--ui-tint-secondary, #b7f0c6);
  }
  100% {
    transform: scale(1);
    background: var(--ui-tint-secondary, #b7f0c6);
  }
}

.calendar-empty {
  aspect-ratio: 1;
  background: transparent;
}

/* Cross mark for completed days */
.cross-mark {
  position: absolute;
  top: 2px;
  right: 2px;
  width: 16px;
  height: 16px;
}

.cross-svg {
  width: 100%;
  height: 100%;
}

.cross-line-1,
.cross-line-2 {
  stroke-dasharray: 12;
  stroke-dashoffset: 12;
  animation: drawCross 0.6s ease-out forwards;
}

.cross-line-2 {
  animation-delay: 0.3s;
}

@keyframes drawCross {
  to {
    stroke-dashoffset: 0;
  }
}

/* Task indicator */
.task-indicator {
  position: absolute;
  bottom: 2px;
  left: 2px;
  width: 16px;
  height: 16px;
  background: rgba(255, 215, 0, 0.9);
  color: #000;
  font-size: 10px;
  font-weight: bold;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* ===== K) Task Modal Styles ===== */
.task-modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.task-modal.modal-open {
  opacity: 1;
}

.modal-backdrop {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(4px);
}

.modal-content {
  position: relative;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-radius: 12px;
  width: 90%;
  max-width: 500px;
  max-height: 80vh;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  transform: scale(0.9);
  transition: transform 0.2s ease;
}

.task-modal.modal-open .modal-content {
  transform: scale(1);
}

.modal-header {
  padding: 20px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: var(--ui-tint-primary, #dff6ff);
}

.modal-title {
  margin: 0;
  font-size: 18px;
  font-weight: bold;
  color: #000;
}

.modal-close {
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: #666;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background 0.2s ease;
}

.modal-close:hover {
  background: rgba(0, 0, 0, 0.1);
}

.modal-body {
  padding: 20px;
  max-height: 60vh;
  overflow-y: auto;
}

.task-input-section {
  display: flex;
  gap: 8px;
  margin-bottom: 20px;
}

#new-task-input {
  flex: 1;
  padding: 12px;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-radius: 6px;
  font-size: 14px;
  background: rgba(255, 255, 255, 0.8);
  transition: border-color 0.2s ease;
}

#new-task-input:focus {
  outline: none;
  border-color: var(--ui-tint-primary, #dff6ff);
}

#add-task-btn {
  padding: 12px 20px;
  background: var(--ui-tint-primary, #dff6ff);
  color: #000;
  border: none;
  border-radius: 6px;
  font-weight: bold;
  cursor: pointer;
  transition: background 0.2s ease;
}

#add-task-btn:hover {
  background: var(--ui-tint-secondary, #b7f0c6);
}

.task-list-section {
  min-height: 100px;
}

#task-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.task-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px;
  margin-bottom: 8px;
  background: rgba(255, 255, 255, 0.6);
  border-radius: 6px;
  border: 1px solid rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

.task-item:hover {
  background: rgba(255, 255, 255, 0.8);
  transform: translateY(-1px);
}

.task-item.completed {
  opacity: 0.7;
  background: rgba(200, 255, 200, 0.6);
}

.task-item.completed .task-text {
  text-decoration: line-through;
}

.task-content {
  display: flex;
  align-items: center;
  gap: 10px;
  flex: 1;
}

.task-checkbox {
  width: 18px;
  height: 18px;
  cursor: pointer;
}

.task-text {
  font-size: 14px;
  color: #333;
  word-break: break-word;
}

.task-actions {
  display: flex;
  gap: 4px;
}

.task-move-btn,
.task-delete-btn {
  background: none;
  border: none;
  cursor: pointer;
  padding: 6px;
  border-radius: 4px;
  font-size: 14px;
  transition: background 0.2s ease;
}

.task-move-btn:hover {
  background: rgba(0, 100, 255, 0.1);
}

.task-delete-btn:hover {
  background: rgba(255, 0, 0, 0.1);
  color: #ff0000;
}

.empty-tasks {
  text-align: center;
  color: #666;
  font-style: italic;
  padding: 20px;
}

/* ===== L) Encouraging Popup ===== */
.encouraging-popup {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10001;
  opacity: 0;
  transform: translate(-50%, -50%) scale(0.8);
  transition: all 0.3s ease;
  pointer-events: none;
}

.encouraging-popup.show {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}

.popup-content {
  background: linear-gradient(135deg, #ff6b6b, #feca57);
  color: white;
  padding: 20px 30px;
  border-radius: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  text-align: center;
  min-width: 250px;
}

.popup-icon {
  font-size: 32px;
  margin-bottom: 10px;
  display: block;
}

.popup-message {
  font-size: 16px;
  font-weight: bold;
  line-height: 1.4;
}

/* ===== M) Timer Controls Styling ===== */
#timer-controls {
  display: flex;
  gap: 10px;
  justify-content: center;
  margin-top: 20px;
}

#timer-controls button {
  padding: 12px 20px;
  background: var(--ui-tint-primary, #dff6ff);
  color: #000;
  border: none;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
  font-size: 14px;
}

#timer-controls button:hover {
  background: var(--ui-tint-secondary, #b7f0c6);
  transform: translateY(-1px);
}

#timer-controls button:active {
  transform: translateY(0);
}

#timer-controls button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none;
}

#btn-pause {
  display: none; /* Initially hidden */
}

/* Pulse animation for work start prompt */
.pulse-animation {
  animation: pulseButton 1s ease-in-out infinite;
}

@keyframes pulseButton {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
  }
}

/* ===== N) Timer Display Styling ===== */
#countdown {
  font-size: clamp(28px, 4.5vw, 48px);
  font-weight: bold;
  text-align: center;
  color: var(--timer-text-color, #ffffff);
  margin: 20px 0;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}

#session-indicator {
  text-align: center;
  font-size: 16px;
  color: var(--ui-tint-primary, #dff6ff);
  margin-bottom: 10px;
}

/* ===== O) Navigation Styling ===== */
#sidebar {
  position: fixed;
  top: 50%;
  right: 20px;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  gap: 10px;
  z-index: 1000;
}

.nav-item {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.2);
  border: 2px solid rgba(255, 255, 255, 0.3);
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
}

.nav-item:hover {
  background: rgba(255, 255, 255, 0.4);
  transform: scale(1.1);
  border-color: var(--ui-tint-primary, #dff6ff);
}

.nav-item:active {
  transform: scale(0.95);
}

/* Clock styling */
#clock {
  position: fixed;
  top: 20px;
  left: 20px;
  font-size: 18px;
  font-weight: bold;
  color: var(--timer-text-color, #ffffff);
  background: rgba(0, 0, 0, 0.3);
  padding: 10px 15px;
  border-radius: 10px;
  backdrop-filter: blur(10px);
  z-index: 1000;
  display: flex;
  align-items: center;
  gap: 10px;
}

/* Developer mode toggle button styling */
#dev-mode-toggle {
  background: rgba(255, 255, 255, 0.2);
  color: #fff;
  border: none;
  padding: 6px 10px;
  border-radius: 6px;
  font-size: 12px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
}

#dev-mode-toggle:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.05);
}

#dev-mode-toggle:active {
  transform: scale(0.95);
}

/* Clock reminders button styling */
#clock-reminders-toggle {
  background: none;
  border: none;
  color: var(--timer-text-color, #ffffff);
  font-size: 16px;
  cursor: pointer;
  padding: 4px;
  border-radius: 4px;
  transition: all 0.2s ease;
}

#clock-reminders-toggle:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: scale(1.1);
}

/* Rain toggle button styling */
#rain-toggle {
  background: rgba(0, 150, 255, 0.7);
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
  margin: 10px 0;
  font-size: 14px;
}

#rain-toggle:hover {
  background: rgba(0, 120, 200, 0.8);
  transform: scale(1.05);
}

#rain-toggle:active {
  transform: scale(0.95);
}
