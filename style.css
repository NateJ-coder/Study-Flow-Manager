/* ===== A) CSS Reset & Fullscreen Layout ===== */
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body {
  height: 100%;
  width: 100%;
  min-height: 100vh;
  font-family: sans-serif;
  background: #000; /* fallback background */
  /* Allow natural scrolling on laptop/desktop displays */
  overflow: auto;
}

/* ===== B) Background Layers ===== */
#bg-root {
  position: fixed;
  inset: 0;
  overflow: hidden;
  z-index: 0; /* Behind app content but visible */
}

#bg-slideshow {
  position: absolute;
  inset: 0;
  background-size: cover;
  background-position: center;
  z-index: 1;
}

#particles-layer {
  position: absolute;
  inset: 0;
  pointer-events: none; /* purely decorative */
  z-index: 2;
}

/* ===== C) Navigation Buttons ===== */
.nav-item,
.nav-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  /* laptop-friendly size */
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: rgba(255, 255, 255, 0.15);
  border: 1px solid rgba(255, 255, 255, 0.25);
  cursor: pointer;
  transition: background 0.2s ease, transform 0.2s ease;
}

/* Nav SVG icon styling */
.nav-icon-img {
  /* slightly smaller inside the nav circle for balance on laptop screens */
  width: 28px;
  height: 28px;
  display: block;
  transition: transform 220ms cubic-bezier(.2,.9,.3,1), filter 220ms linear, opacity 180ms ease;
  will-change: transform;
}

.nav-item:hover .nav-icon-img,
.nav-item:focus .nav-icon-img {
  transform: scale(1.08) translateY(-2px);
  opacity: 1;
}

/* brief pop animation when exiting screensaver */
.nav-icon-img.pop {
  transform: scale(1.22) translateY(-4px);
  transition: transform 260ms cubic-bezier(.2,.9,.3,1);
}

/* Theme tinting for icons — use CSS variables set by JS */
.nav-icon-img {
  /* base shadow + optional colored glow using theme tint variable */
  filter: drop-shadow(0 2px 2px rgba(0,0,0,0.12)) drop-shadow(0 0 6px var(--nav-icon-tint, transparent));
}

/* ===== Seasonal SVG Button Color Theming ===== */
:root {
  /* Default/Base SVG Button Colors */
  --svg-wood-primary: #b86a2d;
  --svg-wood-secondary: #a15523;
  --svg-wood-tertiary: #7e3c15;
  --svg-leaf-primary: #b8ff5a;
  --svg-leaf-secondary: #2b8a2e;
  --svg-vine-primary: #8af06b;
  --svg-vine-secondary: #1e7a23;
}

/* Summer theme colors */
.summer-theme {
  --svg-wood-primary: #d4a574;
  --svg-wood-secondary: #c0956a;
  --svg-wood-tertiary: #9c7452;
  --svg-leaf-primary: #90ff3e;
  --svg-leaf-secondary: #4ab83d;
  --svg-vine-primary: #7aff55;
  --svg-vine-secondary: #2e9834;
}

/* Winter theme colors */
.winter-theme {
  --svg-wood-primary: #8b6f47;
  --svg-wood-secondary: #7a5f3c;
  --svg-wood-tertiary: #5a4529;
  --svg-leaf-primary: #c4e8ff;
  --svg-leaf-secondary: #6bb6ff;
  --svg-vine-primary: #a8d4ff;
  --svg-vine-secondary: #4a90c2;
}

/* Autumn theme colors */
.autumn-theme {
  --svg-wood-primary: #a0653a;
  --svg-wood-secondary: #8b5630;
  --svg-wood-tertiary: #6b4025;
  --svg-leaf-primary: #ff8c42;
  --svg-leaf-secondary: #d2691e;
  --svg-vine-primary: #ff7f33;
  --svg-vine-secondary: #cc5500;
}

/* Clock icon micro-rotation for seconds tick */
.nav-icon-rotate { transform-origin: 50% 50%; transition: transform 220ms ease; }


.nav-item:hover,
.nav-icon:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.05);
}

.nav-item:active,
.nav-icon:active {
  transform: scale(0.95);
}

/* ===== D) Page Visibility States ===== */
.app-page {
  width: 100%;
  /* allow pages to size naturally; ensure at least full viewport height */
  min-height: 100vh;
  display: block;
  background: transparent; /* Allow background to show through */
  position: relative;
  z-index: 10; /* Above background layers */
}

.app-page.hidden {
  display: none !important;
}

/* Main app sections */
#app {
  position: relative; /* Crucial for positioning children absolutely */
  width: 100%;
  height: 100vh; /* Full viewport height for absolute positioning */
  background: transparent; /* Allow background to show through */
  z-index: 10; /* Above background layers */
  display: flex;
  align-items: center;
  justify-content: center;
}

#app section {
  width: 100%;
  /* slightly narrower max-width for better readability on laptops */
  max-width: 720px;
  position: relative;
  padding: 20px;
  text-align: center;
  background: transparent; /* Allow background to show through */
  z-index: 10; /* Above background layers */
}



#app section[hidden] {
  display: none;
}

.page-title h1 {
  /* Move the main app title to top-left, smaller and unobtrusive */
  position: fixed;
  top: 16px;
  left: 18px;
  margin: 0;
  font-size: 16px;
  font-weight: 700;
  color: var(--timer-text-color, #ffffff);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.45);
  z-index: 1200;
}

/* ===== E) App Title Positioning ===== */
#app-title {
  position: fixed;
  top: 30px;
  left: 30px;
  font-size: clamp(1.8rem, 4vw, 2.5rem);
  color: var(--ui-tint-primary, #dff6ff);
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
  font-weight: 600;
  z-index: 200;
  letter-spacing: 1px;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
}

/* ===== Timer Mode System ===== */
.timer-mode {
  position: fixed;
  opacity: 0;
  visibility: hidden;
  transition: all 0.5s ease;
  pointer-events: none;
}

.timer-mode.active {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}

/* ===== Rest Mode Timer (bottom of screen) ===== */
#rest-mode-timer {
  bottom: 80px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  align-items: center;
  gap: 30px;
  background: rgba(0, 0, 0, 0.4);
  padding: 25px 45px;
  border-radius: 25px;
  backdrop-filter: blur(20px);
  border: 2px solid var(--ui-tint-primary, #dff6ff);
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5);
  z-index: 100;
}

#hourglass-icon {
  font-size: clamp(36px, 5vw, 48px);
  color: var(--ui-tint-primary, #dff6ff);
  text-shadow: 0 0 15px currentColor;
  animation: flip 2s ease-in-out infinite;
}

#rest-timer-display {
  text-align: center;
  color: #ffffff;
}

#rest-session-indicator {
  font-size: clamp(14px, 2.2vw, 18px);
  color: var(--ui-tint-primary, #dff6ff);
  margin-bottom: 8px;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.7);
  font-weight: 500;
}

#rest-countdown {
  font-size: clamp(40px, 7vw, 56px);
  font-weight: bold;
  text-shadow: 3px 3px 8px rgba(0, 0, 0, 0.6);
  letter-spacing: 3px;
  color: var(--ui-tint-primary, #dff6ff);
}

/* ===== Active Mode Timer (centered with frame) ===== */
#active-mode-timer {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: min(85vw, 85vh);
  max-width: 700px;
  max-height: 500px;
  z-index: 100;
}

/* New frame layout system */
.frame-wrap {
  --win-top: 15%;   /* tweak these 3 until the SVG sits perfectly */
  --win-left: 28%;
  --win-width: 44%;

  position: relative;
  width: min(90vw, 980px);
  margin: 0 auto;
  aspect-ratio: 16/10; /* overall box – adjust if your frame is taller/shorter */
}

.frame-ornate {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: contain;
  pointer-events: none; /* click-through */
  filter: drop-shadow(0 8px 24px rgba(0,0,0,.45));
}

/* The window area that holds the animated scene */
.frame-window {
  position: absolute;
  top: var(--win-top);
  left: var(--win-left);
  width: var(--win-width);
  /* lock the scene to its native ratio (our inline SVG uses 900 x 560) */
  aspect-ratio: 900 / 560;
  overflow: hidden;           /* clip particles inside the glass */
  border-radius: 10px;        /* subtle rounding like the mock */
}

/* Make the inline SVG scale nicely */
.frame-window > svg {
  display: block;
  width: 100%;
  height: 100%;
}

/* Timer UI overlay (on top of frame) */
.timer-ui {
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  pointer-events: none; /* so clicks pass to buttons only */
  color: #fff;
  text-align: center;
  z-index: 20;
}

.timer-ui .session-label {
  font-size: clamp(16px, 2.8vw, 22px);
  color: var(--ui-tint-primary, #dff6ff);
  margin-bottom: 15px;
  text-shadow: 0 2px 3px rgba(0,0,0,.35);
  font-weight: 500;
}

.timer-ui .countdown {
  font-size: clamp(48px, 8vw, 80px);
  font-weight: bold;
  text-shadow: 0 2px 3px rgba(0,0,0,.35);
  letter-spacing: 4px;
  color: var(--ui-tint-primary, #dff6ff);
  margin-bottom: 20px;
}

.timer-ui .wood-btn {
  pointer-events: auto; /* re-enable on the buttons themselves */
  margin: 0 .5rem;
  background: rgba(139, 69, 19, 0.8);
  border: 2px solid #8B4513;
  color: #fff;
  padding: 10px 20px;
  border-radius: 8px;
  cursor: pointer;
  font-weight: 600;
  transition: all 0.3s ease;
  backdrop-filter: blur(5px);
}

.timer-ui .wood-btn:hover {
  background: rgba(139, 69, 19, 1);
  transform: translateY(-2px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

.timer-ui .frame-buttons {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

/* Optional: pause all animations when you add .paused on #studyframe */
#studyframe.paused * {
  animation-play-state: paused !important;
}

/* ===== Frame SVG Buttons ===== */
#frame-buttons {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

.frame-svg-button {
  position: absolute;
  width: clamp(70px, 9vw, 110px);
  height: clamp(70px, 9vw, 110px);
  background: rgba(255, 255, 255, 0.1);
  border: 2px solid var(--ui-tint-primary, #dff6ff);
  border-radius: 50%;
  cursor: pointer;
  pointer-events: auto;
  transition: all 0.3s ease;
  z-index: 20;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
}

.frame-svg-button:hover {
  transform: scale(1.1);
  background: var(--ui-tint-primary, #dff6ff);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
}

.frame-svg-button:active {
  transform: scale(0.95);
}

/* Position buttons at frame corners */
#btn-start {
  bottom: 10%;
  left: 8%;
}

#btn-reset {
  bottom: 10%;
  right: 8%;
}

.frame-svg-button svg {
  width: 60%;
  height: 60%;
  display: block;
  background: none !important;
  fill: var(--ui-tint-primary, #dff6ff);
  transition: fill 0.3s ease;
}

.frame-svg-button:hover svg {
  fill: var(--bg-primary, #1a1a2e);
}

/* Remove white backgrounds from SVGs */
.frame-svg-button svg rect[fill="#ffffff"],
.frame-svg-button svg rect[fill="white"] {
  fill: none !important;
}

/* ===== Set Reminder Button ===== */
#btn-set-reminder {
  position: fixed;
  bottom: 40px;
  left: 40px;
  background: rgba(255, 255, 255, 0.1);
  border: 2px solid var(--ui-tint-primary, #dff6ff);
  color: var(--ui-tint-primary, #dff6ff);
  font-size: clamp(16px, 2.5vw, 20px);
  padding: 12px 24px;
  border-radius: 12px;
  cursor: pointer;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
  z-index: 150;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
  font-weight: 500;
}

#btn-set-reminder:hover {
  background: var(--ui-tint-primary, #dff6ff);
  color: var(--bg-primary, #1a1a2e);
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
}



/* Hourglass flip animation */
.hourglass.flip {
  transform: rotateZ(180deg);
}

@keyframes flip {
  0%, 100% { transform: rotateY(0deg); }
  50% { transform: rotateY(180deg); }
}

/* Sand containers */
.hourglass::before,
.hourglass::after {
  content: '';
  position: absolute;
  width: 100%;
  background: var(--sand-color, #f7f7f7);
  transition: height 0.3s ease;
}

/* Top sand */
.hourglass::before {
  top: 3px;
  left: 0;
  height: var(--top-sand-height, 40%);
  border-radius: 4px 4px 50% 50%;
}

/* Bottom sand */
.hourglass::after {
  bottom: 3px;
  left: 0;
  height: var(--bottom-sand-height, 10%);
  border-radius: 50% 50% 4px 4px;
}

/* Sand stream effect */
.sand-stream {
  position: absolute;
  top: 48%;
  left: 50%;
  width: 2px;
  height: 20px;
  background: var(--sand-color, #f7f7f7);
  transform: translateX(-50%);
  opacity: 0;
  animation: sandPour 2s linear infinite;
}

@keyframes sandPour {
  0% {
    opacity: 0;
    height: 0;
  }
  50% {
    opacity: 1;
    height: 20px;
  }
  100% {
    opacity: 0;
    height: 0;
  }
}

/* ===== F) Screensaver Styles ===== */
.screensaver-active {
  cursor: none;
}

@keyframes hourglassPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
}

/* ===== G) Rain Wet Effect ===== */
.rain-wet-effect {
  position: relative;
  overflow: hidden;
}

.rain-wet-effect::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: url('assets/images/rain-drops-overlay.png') repeat;
  background-size: 40px 40px;
  opacity: 0;
  animation: rainDrops 0.5s ease-in-out forwards;
  pointer-events: none;
  border-radius: inherit;
}

@keyframes rainDrops {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  50% {
    opacity: 0.9;
  }
  100% {
    opacity: 0.7;
    transform: scale(1);
  }
}

/* Enhanced wet effect for buttons */
.rain-wet-effect:hover::after {
  animation: rainDropsHover 0.3s ease-in-out forwards;
}

@keyframes rainDropsHover {
  0% {
    opacity: 0.7;
  }
  50% {
    opacity: 0.9;
  }
  100% {
    opacity: 1;
  }
}

/* Glass reflection effect during rain */
.rain-wet-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 255, 255, 0.3) 50%,
    transparent 100%
  );
  transform: skewX(-15deg);
  animation: glassReflection 3s ease-in-out infinite;
  pointer-events: none;
  border-radius: inherit;
}

@keyframes glassReflection {
  0% {
    left: -100%;
  }
  50% {
    left: -100%;
  }
  100% {
    left: 100%;
  }
}

/* ===== G2) Rain Particle System ===== */
.rain-particle {
  position: fixed;
  width: 2px;
  height: 15px;
  background: linear-gradient(180deg, rgba(173, 216, 230, 0.8) 0%, rgba(135, 206, 235, 0.6) 50%, transparent 100%);
  pointer-events: none;
  z-index: 5;
  opacity: 0.7;
  animation: rainFall linear infinite;
}

.rain-particle.heavy {
  width: 3px;
  height: 20px;
  opacity: 0.9;
}

.rain-particle.light {
  width: 1px;
  height: 10px;
  opacity: 0.5;
}

@keyframes rainFall {
  0% {
    transform: translateY(-100px);
    opacity: 0;
  }
  10% {
    opacity: 0.7;
  }
  90% {
    opacity: 0.7;
  }
  100% {
    transform: translateY(100vh);
    opacity: 0;
  }
}

/* Rain splash effect when particles hit bottom */
.rain-splash {
  position: fixed;
  width: 8px;
  height: 2px;
  background: rgba(173, 216, 230, 0.6);
  border-radius: 50%;
  pointer-events: none;
  z-index: 4;
  animation: rainSplash 0.3s ease-out forwards;
}

@keyframes rainSplash {
  0% {
    transform: scale(0.5);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.5);
    opacity: 0.6;
  }
  100% {
    transform: scale(2);
    opacity: 0;
  }
}

/* Rain overlay for entire screen */
.rain-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  z-index: 3;
  background: url('assets/images/rain-drops-overlay.png') repeat;
  background-size: 100px 100px;
  opacity: 0;
  animation: rainOverlayFade 1s ease-in-out forwards;
}

@keyframes rainOverlayFade {
  0% {
    opacity: 0;
    transform: translateY(-10px);
  }
  100% {
    opacity: 0.3;
    transform: translateY(0);
  }
}

/* ===== STYLIZED PARTICLES ===== */

/* Base particle look - Small circles for smooth rendering */
.particle {
  position: absolute;
  pointer-events: none;
  /* Small base size for subtle, smooth look */
  width: 6px;
  height: 6px;
  border-radius: 50%; /* Make them circular for soft particle look */
  opacity: 0.8;
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);
}

/* Summer Leaves (fresh green) */
.particle.leaves-green {
  background-color: #90c24c; /* Fresh Green */
}

/* Autumn Leaves (burnt orange/brown) */
.particle.leaves-burnt_orange_brown {
  background-color: #c9622d; /* Burnt Orange/Brown */
}

/* Brown leaves variant */
.particle.leaves-brown {
  background-color: #8b4513; /* Saddle Brown */
}

/* Snowflake particles */
.particle.snowflakes {
  background-color: #ffffff;
  box-shadow: 0 0 3px rgba(255,255,255,0.6);
}

/* Enhanced drift animation for realistic movement */
@keyframes fall-with-drift {
  0% {
    /* Apply the random rotation and scale set by JS */
    transform: 
      translate3d(0, 0, 0) 
      rotateZ(var(--initial-rotate, 0deg)) 
      scale(var(--particle-scale, 1));
    opacity: 0.9;
  }
  
  50% {
    /* Halfway through: incorporate half drift and more rotation */
    transform: 
      translate3d(calc(var(--particle-drift, 0px) / 2), 50vh, 0) 
      rotateZ(calc(var(--initial-rotate, 0deg) + 180deg)) 
      scale(var(--particle-scale, 1));
    opacity: 0.7;
  }
  
  100% {
    /* Full drift and rotation as it falls off-screen */
    transform: 
      translate3d(var(--particle-drift, 0px), 100vh, 0) 
      rotateZ(calc(var(--initial-rotate, 0deg) + 360deg)) 
      scale(var(--particle-scale, 1));
    opacity: 0;
  }
}

/* Apply animation to all leaf particle types */
.particle.leaves-green,
.particle.leaves-burnt_orange_brown,
.particle.leaves-brown {
  animation: fall-with-drift var(--fall-duration, 8s) linear infinite;
}

/* Legacy fallback animations */
.falling-leaf {
  position: fixed;
  top: -50px;
  font-size: 28px;
  color: #66bb6a;
  opacity: 0.8;
  pointer-events: none;
  z-index: 3;
  animation: fallLeaf 10s linear infinite;
}

@keyframes fallLeaf {
  0%   {transform: translateY(0) rotate(0deg);}
  100% {transform: translateY(110vh) rotate(360deg);}
}

/* Autumn leaves */
.autumn-leaf {
  position: fixed;
  top: -60px;
  font-size: 28px;
  color: #e57373;
  opacity: 0.9;
  pointer-events: none;
  z-index: 3;
  animation: fall-with-drift 8s ease-in infinite;
}

@keyframes fall-with-drift {
  0% {
    transform: 
      translate3d(0, 0, 0)
      rotateZ(var(--initial-rotate, 0deg));
    opacity: 0.9;
  }
  
  50% {
    transform: 
      translate3d(calc(var(--particle-drift, 0px) * 0.5), 50vh, 0) 
      rotateZ(calc(var(--initial-rotate, 0deg) + 180deg));
    opacity: 0.7;
  }
  
  100% {
    transform: 
      translate3d(var(--particle-drift, 0px), 100vh, 0)
      rotateZ(calc(var(--initial-rotate, 0deg) + 360deg));
    opacity: 0;
  }
}

@keyframes fallAutumn {
  0%   {transform: translateY(0) rotate(0deg);}
  100% {transform: translateY(110vh) rotate(720deg);}
}

/* Winter snowflakes */
.snowflake {
  position: fixed;
  top: -50px;
  font-size: 20px;
  color: #fff;
  opacity: 0.8;
  pointer-events: none;
  z-index: 3;
  animation: fallSnow 12s linear infinite;
}

@keyframes fallSnow {
  0%   {transform: translateY(0) translateX(0);}
  100% {transform: translateY(110vh) translateX(50px);}
}

/* Fireflies for night time */
.firefly {
  position: fixed;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: radial-gradient(circle, #ffe066 0%, #ffea8a 40%, transparent 70%);
  box-shadow: 0 0 8px #ffe066, 0 0 20px #ffd633;
  opacity: 0.8;
  pointer-events: none;
  z-index: 3;
  animation: drift 10s ease-in-out infinite, blink 2s ease-in-out infinite alternate;
}

@keyframes drift {
  0% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(30px, -40px);
  }
  50% {
    transform: translate(-20px, 60px);
  }
  75% {
    transform: translate(40px, 20px);
  }
  100% {
    transform: translate(0, 0);
  }
}

@keyframes blink {
  0%, 100% { opacity: 0.2; box-shadow: 0 0 4px #fff, 0 0 10px #ff0; }
  50%      { opacity: 1; box-shadow: 0 0 12px #fff77a, 0 0 25px #ffe066; }
}

/* ===== MOUSE TRAIL PARTICLES ===== */
/* Use the same particle base class for consistency */
.trail-particle {
  position: fixed;
  pointer-events: none;
  z-index: 10002;
  opacity: 0.95;
  /* Inherit particle styling */
  width: 4px;
  height: 4px;
  border-radius: 50%;
  box-shadow: 0 0 1px rgba(0, 0, 0, 0.1);
}

/* Trail particles use same colors as seasonal particles */
.trail-particle.leaves-green {
  background-color: #90c24c; /* Same as particle.leaves-green */
}

.trail-particle.leaves-brown,
.trail-particle.leaves-burnt_orange_brown {
  background-color: #c9622d; /* Same as particle.leaves-burnt_orange_brown */
}

.trail-particle.snowflakes {
  background-color: #ffffff;
  box-shadow: 0 0 3px rgba(255,255,255,0.6);
}

.trail-particle.default {
  background-color: rgba(255,255,255,0.9);
}

/* All trail particles use the same fade animation */
.trail-particle {
  animation: trailFade 0.8s forwards ease-out;
}

@keyframes trailFade {
  0% { 
    opacity: 0.95; 
    transform: translateY(0) scale(1); 
  }
  100% { 
    opacity: 0; 
    transform: translateY(-4px) scale(0.4); 
  }
}

/* ===== CUSTOM CURSOR ===== */
/* Hide native cursor when custom cursor is enabled */
.has-custom-cursor * { cursor: none !important; }

#custom-cursor { width: 40px; height: 40px; border-radius: 50%; position: fixed; pointer-events: none; z-index: 10001; transform: translate(-50%,-50%); display: flex; align-items: center; justify-content: center; }

/* Image inside the cursor (default vs click) */
#custom-cursor img { display: block; width: 26px; height: 26px; }

/* Press animation for the click svg - finger moves down slightly */
.cursor-press { transform: translateY(6px) scale(0.98); transition: transform 120ms cubic-bezier(.2,.9,.3,1); }

/* ===== SCREENSAVER (clean UI, background-first) ===== */
/* When screensaver is active, reduce UI chrome but keep background bright */


.screensaver-active #app,
.screensaver-active header#global-topbar,
.screensaver-active #sidebar,
.screensaver-active .page-title,
.screensaver-active #timer-controls,
.screensaver-active .nav-item {
  opacity: 0; /* hide interactive chrome */
  pointer-events: none;
  transform: translateY(6px);
}

.screensaver-active #timer-frame {
  background: transparent;
  border: none;
  box-shadow: none;
  opacity: 0.85;
}

/* Make the countdown smaller and place it low center to mimic the sleep image */
.screensaver-active #countdown {
  font-size: 28px;
  color: rgba(255,255,255,0.95);
  text-shadow: 0 2px 8px rgba(0,0,0,0.25);
  position: absolute;
  left: 50%;
  bottom: 48px;
  transform: translateX(-50%);
}

/* Emphasize background slightly by scaling the slideshow layer */
.screensaver-active #bg-slideshow {
  transform-origin: center;
  transform: scale(1.03);
  transition: transform 900ms ease;
}

/* Increase particle visibility during screensaver */
.screensaver-active #particles-layer { opacity: 1; }

/* Frame SVG wrapper - position and ensure it frames the timer content */
.timer-frame-svg-wrapper {
  position: absolute;
  inset: 0;
  pointer-events: none;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9; /* behind the main app content but above bg */
  padding: 28px; /* inset the svg so it frames the content */
}

.timer-frame-svg { width: calc(100% - 56px); height: calc(100% - 56px); opacity: 0.98; max-width: 760px; max-height: 760px; }

/* If the frame contains a cat tail or head parts, animate them subtly */
.timer-frame-svg .cat-tail, .cat-tail { transform-origin: 50% 0%; animation: catTailSwing 1.1s ease-in-out infinite; }
.timer-frame-svg .cat-head, .cat-head { transform-origin: 50% 50%; animation: catHeadLook 3.2s ease-in-out infinite; }

@keyframes catTailSwing {
  0% { transform: rotate(-8deg); }
  50% { transform: rotate(8deg); }
  100% { transform: rotate(-8deg); }
}

@keyframes catHeadLook {
  0% { transform: translateX(0px) rotate(0deg); }
  35% { transform: translateX(4px) rotate(2deg); }
  65% { transform: translateX(-2px) rotate(-1deg); }
  100% { transform: translateX(0px) rotate(0deg); }
}

/* Keep timer content above the frame so countdown and controls remain tappable */
#timer-frame > * { position: relative; z-index: 10; }



/* ===== H) Water Ripple Effect ===== */
.water-ripple {
  position: fixed;
  pointer-events: none;
  z-index: 9999;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(173, 216, 230, 0.6) 0%,
    rgba(135, 206, 235, 0.4) 30%,
    rgba(100, 149, 237, 0.2) 60%,
    transparent 100%
  );
  animation: rippleEffect 0.8s ease-out forwards;
}

@keyframes rippleEffect {
  0% {
    width: 10px;
    height: 10px;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.8;
  }
  100% {
    width: 120px;
    height: 120px;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* Multiple ripple sizes for variety */
.water-ripple.large {
  animation: rippleEffectLarge 1s ease-out forwards;
}

@keyframes rippleEffectLarge {
  0% {
    width: 15px;
    height: 15px;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.9;
  }
  100% {
    width: 200px;
    height: 200px;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

.water-ripple.small {
  animation: rippleEffectSmall 0.6s ease-out forwards;
}

@keyframes rippleEffectSmall {
  0% {
    width: 8px;
    height: 8px;
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  50% {
    opacity: 0.7;
  }
  100% {
    width: 80px;
    height: 80px;
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
  }
}

/* ===== I) Shock Animation ===== */
.shock-cursor {
  cursor: not-allowed !important;
}

.shock-cursor * {
  cursor: not-allowed !important;
}

/* Shock flash effect */
.shock-flash {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    45deg,
    transparent 25%,
    rgba(255, 255, 0, 0.3) 25%,
    rgba(255, 255, 0, 0.3) 50%,
    transparent 50%,
    transparent 75%,
    rgba(255, 255, 0, 0.3) 75%
  );
  background-size: 20px 20px;
  pointer-events: none;
  z-index: 10000;
  opacity: 0;
  animation: shockFlash 0.3s ease-in-out;
}

@keyframes shockFlash {
  0% {
    opacity: 0;
    transform: scale(1);
  }
  20% {
    opacity: 0.8;
    transform: scale(1.02);
  }
  40% {
    opacity: 0.4;
    transform: scale(0.98);
  }
   60% {
    opacity: 0.7;
    transform: scale(1.01);
  }
  80% {
    opacity: 0.2;
    transform: scale(0.99);
  }
  100% {
    opacity: 0;
    transform: scale(1);
  }
}

/* Button shock effect */
.button-shock {
  animation: buttonShock 0.4s ease-in-out;
}

@keyframes buttonShock {
  0%, 100% {
    transform: translateX(0);
    filter: brightness(1);
  }
  10% {
    transform: translateX(-2px);
    filter: brightness(1.5) hue-rotate(60deg);
  }
  20% {
    transform: translateX(2px);
    filter: brightness(0.8) hue-rotate(-60deg);
  }
  30% {
    transform: translateX(-1px);
    filter: brightness(1.3) hue-rotate(30deg);
  }
   40% {
    transform: translateX(1px);
    filter: brightness(0.9) hue-rotate(-30deg);
  }
   50% {
    transform: translateX(-0.5px);
    filter: brightness(1.2) hue-rotate(15deg);
  }
   60% {
    transform: translateX(0.5px);
    filter: brightness(0.95) hue-rotate(-15deg);
  }
}

/* Enhanced rain lockout styling */
#rain-lockout {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 30, 60, 0.3);
  backdrop-filter: blur(2px);
  z-index: 8000;
  pointer-events: auto;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Honor the hidden attribute explicitly to avoid accidental display */
#rain-lockout[hidden] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

.lockout-card {
  background: rgba(255, 215, 0, 0.9);
  color: #000;
  padding: 20px 30px;
  border-radius: 12px;
  font-weight: bold;
  font-size: 16px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  animation: rainLockoutPulse 2s ease-in-out infinite;
  text-align: center;
}

.lockout-card h2 {
  margin: 0 0 10px 0;
  font-size: 20px;
}

.lockout-card p {
  margin: 5px 0;
  font-size: 14px;
}

@keyframes rainLockoutPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
}

/* ===== J) Calendar Styles ===== */
#calendar-grid {
  width: 100%;
  max-width: 560px;         /* was 400px, easier to read */
  margin: 0 auto;
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  gap: 6px;                 /* give cells breathing room */
  background: rgba(255, 255, 255, 0.1);
  padding: 12px;
  border-radius: 8px;
  backdrop-filter: blur(10px);
}

.calendar-header {
  padding: 8px 4px;
  text-align: center;
  font-weight: bold;
  font-size: 12px;
  color: var(--ui-tint-primary, #dff6ff);
  background: rgba(255, 255, 255, 0.1);
  border-radius: 4px;
}

.calendar-day {
  position: relative;
  aspect-ratio: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  background: rgba(255, 255, 255, 0.15);
  border-radius: 6px;
  cursor: pointer;
  border: 1px solid rgba(255,255,255,0.12);
  transition: transform .18s ease, background .18s ease, border-color .18s ease;
  font-size: 14px;
  font-weight: 500;
  color: #ffffff;
  overflow: hidden;
}

.calendar-day:hover {
  background: rgba(255, 255, 255, 0.25);
  transform: translateZ(0) scale(1.04);
  border-color: var(--ui-tint-primary, #dff6ff);
}

.calendar-day.today {
  background: var(--ui-tint-primary, #dff6ff);
  color: #000000;
  font-weight: bold;
  box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.5);
}

.calendar-day.completed {
  background: var(--ui-tint-secondary, #b7f0c6);
  color: #000000;
  box-shadow: inset 0 0 0 2px rgba(0,0,0,.08);
}

.calendar-day.has-tasks {
  border: 2px solid rgba(255, 215, 0, 0.6);
}

.calendar-day.drawing-animation {
  animation: drawingEffect 0.8s ease-in-out;
}

@keyframes drawingEffect {
  0% {
    transform: scale(1);
    background: rgba(255, 255, 255, 0.15);
  }
  25% {
    transform: scale(1.1);
    background: rgba(255, 215, 0, 0.3);
  }
  50% {
    transform: scale(1.15);
    background: rgba(255, 140, 0, 0.4);
  }
  75% {
    transform: scale(1.1);
    background: var(--ui-tint-secondary, #b7f0c6);
  }
  100% {
    transform: scale(1);
    background: var(--ui-tint-secondary, #b7f0c6);
  }
}

.calendar-empty {
  aspect-ratio: 1;
  background: transparent;
}

/* Cross mark container */
.cross-mark { position:absolute; inset: 6px; }

.cross-svg {
  width: 100%;
  height: 100%;
}

/* Lines draw-in animation (thicker + longer dash) */
.cross-line-1, .cross-line-2 {
  stroke-dasharray: 36;
  stroke-dashoffset: 36;
  animation: drawCross 0.45s ease-out forwards;
}
.cross-line-2 { animation-delay: 0.15s; }

@keyframes drawCross { to { stroke-dashoffset: 0; } }

.task-indicator{
  position:absolute; bottom:4px; right:4px;
  min-width:18px; height:18px; padding:0 4px;
  display:flex; align-items:center; justify-content:center;
  font-size:11px; font-weight:700; color:#000;
  background: rgba(255,215,0,0.95);
  border-radius:999px; border:1px solid rgba(0,0,0,.15);
}

/* ===== K) Task Modal Styles ===== */
.task-modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 10000;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.task-modal.modal-open {
  opacity: 1;
}

.modal-backdrop {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.6);
  backdrop-filter: blur(4px);
}

.modal-content {
  position: relative;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border-radius: 12px;
  width: 90%;
  max-width: 500px;
  max-height: 80vh;
  overflow: hidden;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  transform: scale(0.9);
  transition: transform 0.2s ease;
}

.task-modal.modal-open .modal-content {
  transform: scale(1);
}

.modal-header {
  padding: 20px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  display: flex;
  align-items: center;
  justify-content: space-between;
  background: var(--ui-tint-primary, #dff6ff);
}

.modal-title {
  margin: 0;
  font-size: 18px;
  font-weight: bold;
  color: #000;
}

.modal-close {
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: #666;
  width: 32px;
  height: 32px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: background 0.2s ease;
}

.modal-close:hover {
  background: rgba(0, 0, 0, 0.1);
}

.modal-body {
  padding: 20px;
  max-height: 60vh;
  overflow-y: auto;
}

.task-input-section {
  display: flex;
  gap: 8px;
  margin-bottom: 20px;
}

#new-task-input {
  flex: 1;
  padding: 12px;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-radius: 6px;
  font-size: 14px;
  background: rgba(255, 255, 255, 0.8);
  transition: border-color 0.2s ease;
}

#new-task-input:focus {
  outline: none;
  border-color: var(--ui-tint-primary, #dff6ff);
}

#add-task-btn {
  padding: 12px 20px;
  background: var(--ui-tint-primary, #dff6ff);
  color: #000;
  border: none;
  border-radius: 6px;
  font-weight: bold;
  cursor: pointer;
  transition: background 0.2s ease;
}

#add-task-btn:hover {
  background: var(--ui-tint-secondary, #b7f0c6);
}

.task-list-section {
  min-height: 100px;
}

#task-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.task-item {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px;
  margin-bottom: 8px;
  background: rgba(255, 255, 255, 0.6);
  border-radius: 6px;
  border: 1px solid rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
}

.task-item:hover {
  background: rgba(255, 255, 255, 0.8);
  transform: translateY(-1px);
}

.task-item.completed {
  opacity: 0.7;
  background: rgba(200, 255, 200, 0.6);
}

.task-item.completed .task-text {
  text-decoration: line-through;
}

.task-content {
  display: flex;
  align-items: center;
  gap: 10px;
  flex: 1;
}

.task-checkbox {
  width: 18px;
  height: 18px;
  cursor: pointer;
}

.task-text {
  font-size: 14px;
  color: #333;
  word-break: break-word;
}

.task-actions {
  display: flex;
  gap: 4px;
}

.task-move-btn,
.task-delete-btn {
  background: none;
  border: none;
  cursor: pointer;
  padding: 6px;
  border-radius: 4px;
  font-size: 14px;
  transition: background 0.2s ease;
}

.task-move-btn:hover {
  background: rgba(0, 100, 255, 0.1);
}

.task-delete-btn:hover {
  background: rgba(255, 0, 0, 0.1);
  color: #ff0000;
}

.empty-tasks {
  text-align: center;
  color: #666;
  font-style: italic;
  padding: 20px;
}

/* ===== L) Encouraging Popup ===== */
.encouraging-popup {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10001;
  opacity: 0;
  transform: translate(-50%, -50%) scale(0.8);
  transition: all 0.3s ease;
  pointer-events: none;
}

.encouraging-popup.show {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}

.popup-content {
  background: linear-gradient(135deg, #ff6b6b, #feca57);
  color: white;
  padding: 20px 30px;
  border-radius: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
  text-align: center;
  min-width: 250px;
}

.popup-icon {
  font-size: 32px;
  margin-bottom: 10px;
  display: block;
}

.popup-message {
  font-size: 16px;
  font-weight: bold;
  line-height: 1.4;
}

/* Old timer controls CSS removed - using new layout system */

#btn-pause {
  display: none; /* Initially hidden */
}

/* Pulse animation for work start prompt */
.pulse-animation {
  animation: pulseButton 1s ease-in-out infinite;
}

@keyframes pulseButton {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.4);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 0 0 10px rgba(255, 255, 255, 0);
  }
}

/* ===== N) Timer Display Styling ===== */
#countdown {
  font-size: clamp(28px, 4.5vw, 48px);
  font-weight: bold;
  text-align: center;
  color: var(--timer-text-color, #ffffff);
  margin: 20px 0;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
}



/* ===== O) Navigation Styling ===== */
#sidebar {
  position: fixed;
  top: 50%;
  right: 30px;
  transform: translateY(-50%);
  display: flex;
  flex-direction: column;
  gap: 15px;
  z-index: 1000;
}

.nav-item {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  background: rgba(255, 165, 0, 0.9);
  border: 3px solid rgba(255, 255, 255, 0.8);
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
}

.nav-item:hover {
  background: rgba(255, 165, 0, 1);
  transform: scale(1.1);
  border-color: rgba(255, 255, 255, 1);
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
}

.nav-item:active {
  transform: scale(0.95);
}

/* Header styling */
#global-topbar {
  position: fixed;
  top: 0;
  right: 0;
  z-index: 1000;
  pointer-events: none;
}

#global-topbar * {
  pointer-events: auto;
}

/* Clock styling */
#clock {
  position: fixed;
  top: 20px;
  right: 30px;
  font-size: 18px;
  font-weight: 700;
  color: var(--ui-tint-primary, #dff6ff);
  background: rgba(0, 0, 0, 0.3);
  padding: 8px 16px;
  border-radius: 12px;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
  z-index: 1200;
  display: flex;
  align-items: center;
  gap: 8px;
}

#clock img {
  width: 20px;
  height: 20px;
  filter: drop-shadow(0 0 3px rgba(0,0,0,.4));
}

/* Background navigation arrows */
.bg-nav {
  position: fixed;
  top: 50%;
  transform: translateY(-50%);
  width: 56px;
  height: 56px;
  border-radius: 50%;
  background: rgba(0,0,0,.35);
  color: #fff;
  font-size: 32px;
  line-height: 56px;
  text-align: center;
  border: 1px solid rgba(255,255,255,.5);
  z-index: 900;
  backdrop-filter: blur(6px);
  cursor: pointer;
}

.bg-nav.prev {
  left: 24px;
}

.bg-nav.next {
  right: 24px;
}

.bg-nav:hover {
  background: rgba(0,0,0,.5);
}

/* Developer/debug elements - hide for production */
.dev-only {
  display: none;
}

/* Show dev elements when body has dev-mode class */
body.dev-mode .dev-only {
  display: block;
}

/* Developer mode toggle button styling */
#dev-mode-toggle {
  background: rgba(255, 255, 255, 0.2);
  color: #fff;
  border: none;
  padding: 6px 10px;
  border-radius: 6px;
  font-size: 12px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
}

#dev-mode-toggle:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.05);
}

#dev-mode-toggle:active {
  transform: scale(0.95);
}

/* clock reminders UI removed; styles cleaned up */

/* Rain toggle button styling */
#rain-toggle {
  background: rgba(0, 150, 255, 0.7);
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 8px;
  font-weight: bold;
  cursor: pointer;
  transition: all 0.2s ease;
  margin: 10px 0;
  font-size: 14px;
}

#rain-toggle:hover {
  background: rgba(0, 120, 200, 0.8);
  transform: scale(1.05);
}

#rain-toggle:active {
  transform: scale(0.95);
}
